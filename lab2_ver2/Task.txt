Вариант 6
1. Разработать класс "двоичный сигнал" в соответствии со следующим заданием :
    Состояние класса - Двоичный сигнал определяется последовательностью состояний сигнала(значение уровня и длительность типа char 
        в условных единицах).Для описания состояния сигнала целесообразно использовать структуру. Память под массив структур выделяется 
        статически, во время компиляции, и задается массивом фиксированного размера.Задаётся максимальная длительность сигнала.
    Протокол класса - Определяет возможности создания и инициализации экземпляров класса и правила их использования(методы класса).
    Предусмотреть следующие возможности :
    • пустой конструктор для инициализации экземпляров и массивов экземпляров класса по умолчанию;
    • создание экземпляров класса с инициализацией постоянным уровнем сигнала(уровень 0 или 1 на максимальную длительность);
    • создание экземпляров класса с инициализацией сигналом как строки символов;
    • ввод экземпляров класса из входного потока и вывод((*) псевдографического рисунка) в выходной поток(с помощью перегруженных операторов >> и << );
    • инвертировать сигнал(с помощью перегруженного оператора !);
    • дополнение сигнала другим сигналом(с помощью перегруженного оператора += );
    • вставка в определённый момент времени(тип int) другого сигнала(с помощью перегруженного оператора());
    • копирование сигнала определённое число раз(с помощью перегруженного оператора *= );
    • удаление фрагмента сигнала в определенное время(тип int) определённой длительности(с помощью перегруженного оператора()).
2. Проектирование класса рекомендуется начать с представления состояния класса, учитывающего заданные операции, а затем 
    реализации конструкторов и перегруженного оператора вывода.Для отладки и исчерпывающего тестирования других методов 
    разработанного класса реализовать диалоговую программу, которая позволяет вводить параметры, отлаживаемых методов.
    Для обработки ошибочных ситуаций использовать механизм исключительных ситуаций.
3. Повторить разработку класса при условии, что память под массив структур необходимой длины выделяется динамически, во время 
    выполнения программы(с помощью оператора new; память задается указателем на структуру в состоянии класса).

Дополнить интерфейс класса следующими возможностями :
    • создание экземпляра класса с его инициализацией другим экземпляром класса(копирующий конструктор);
    • переопределение  экземпляра класса(с помощью перегруженного оператора присваивания).
4. Написать прикладную программу, использующую разработанный класс.